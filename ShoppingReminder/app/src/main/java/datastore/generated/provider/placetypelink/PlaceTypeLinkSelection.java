/**
 *  This class was generated by Android-contentprovider-generator software
 *       (https://github.com/BoD/android-contentprovider-generator)
 */
package datastore.generated.provider.placetypelink;

import java.util.Date;

import android.content.ContentResolver;
import android.database.Cursor;
import android.net.Uri;

import datastore.generated.provider.base.AbstractSelection;
import datastore.generated.provider.places.*;
import datastore.generated.provider.placetypes.*;

/**
 * Selection for the {@code place_type_link} table.
 */
public class PlaceTypeLinkSelection extends AbstractSelection<PlaceTypeLinkSelection> {
    @Override
    protected Uri baseUri() {
        return PlaceTypeLinkColumns.CONTENT_URI;
    }

    /**
     * Query the given content resolver using this selection.
     *
     * @param contentResolver The content resolver to query.
     * @param projection A list of which columns to return. Passing null will return all columns, which is inefficient.
     * @param sortOrder How to order the rows, formatted as an SQL ORDER BY clause (excluding the ORDER BY itself). Passing null will use the default sort
     *            order, which may be unordered.
     * @return A {@code PlaceTypeLinkCursor} object, which is positioned before the first entry, or null.
     */
    public PlaceTypeLinkCursor query(ContentResolver contentResolver, String[] projection, String sortOrder) {
        Cursor cursor = contentResolver.query(uri(), projection, sel(), args(), sortOrder);
        if (cursor == null) return null;
        return new PlaceTypeLinkCursor(cursor);
    }

    /**
     * Equivalent of calling {@code query(contentResolver, projection, null)}.
     */
    public PlaceTypeLinkCursor query(ContentResolver contentResolver, String[] projection) {
        return query(contentResolver, projection, null);
    }

    /**
     * Equivalent of calling {@code query(contentResolver, projection, null, null)}.
     */
    public PlaceTypeLinkCursor query(ContentResolver contentResolver) {
        return query(contentResolver, null, null);
    }


    public PlaceTypeLinkSelection id(long... value) {
        addEquals("place_type_link." + PlaceTypeLinkColumns._ID, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeId(long... value) {
        addEquals(PlaceTypeLinkColumns.PLACE_ID, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeIdNot(long... value) {
        addNotEquals(PlaceTypeLinkColumns.PLACE_ID, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeIdGt(long value) {
        addGreaterThan(PlaceTypeLinkColumns.PLACE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeIdGtEq(long value) {
        addGreaterThanOrEquals(PlaceTypeLinkColumns.PLACE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeIdLt(long value) {
        addLessThan(PlaceTypeLinkColumns.PLACE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeIdLtEq(long value) {
        addLessThanOrEquals(PlaceTypeLinkColumns.PLACE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placesName(String... value) {
        addEquals(PlacesColumns.NAME, value);
        return this;
    }

    public PlaceTypeLinkSelection placesNameNot(String... value) {
        addNotEquals(PlacesColumns.NAME, value);
        return this;
    }

    public PlaceTypeLinkSelection placesNameLike(String... value) {
        addLike(PlacesColumns.NAME, value);
        return this;
    }

    public PlaceTypeLinkSelection placesNameContains(String... value) {
        addContains(PlacesColumns.NAME, value);
        return this;
    }

    public PlaceTypeLinkSelection placesNameStartsWith(String... value) {
        addStartsWith(PlacesColumns.NAME, value);
        return this;
    }

    public PlaceTypeLinkSelection placesNameEndsWith(String... value) {
        addEndsWith(PlacesColumns.NAME, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLatitude(double... value) {
        addEquals(PlacesColumns.LATITUDE, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placesLatitudeNot(double... value) {
        addNotEquals(PlacesColumns.LATITUDE, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placesLatitudeGt(double value) {
        addGreaterThan(PlacesColumns.LATITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLatitudeGtEq(double value) {
        addGreaterThanOrEquals(PlacesColumns.LATITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLatitudeLt(double value) {
        addLessThan(PlacesColumns.LATITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLatitudeLtEq(double value) {
        addLessThanOrEquals(PlacesColumns.LATITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLongitude(double... value) {
        addEquals(PlacesColumns.LONGITUDE, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placesLongitudeNot(double... value) {
        addNotEquals(PlacesColumns.LONGITUDE, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placesLongitudeGt(double value) {
        addGreaterThan(PlacesColumns.LONGITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLongitudeGtEq(double value) {
        addGreaterThanOrEquals(PlacesColumns.LONGITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLongitudeLt(double value) {
        addLessThan(PlacesColumns.LONGITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placesLongitudeLtEq(double value) {
        addLessThanOrEquals(PlacesColumns.LONGITUDE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypeId(long... value) {
        addEquals(PlaceTypeLinkColumns.PLACE_TYPE_ID, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeTypeIdNot(long... value) {
        addNotEquals(PlaceTypeLinkColumns.PLACE_TYPE_ID, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeTypeIdGt(long value) {
        addGreaterThan(PlaceTypeLinkColumns.PLACE_TYPE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypeIdGtEq(long value) {
        addGreaterThanOrEquals(PlaceTypeLinkColumns.PLACE_TYPE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypeIdLt(long value) {
        addLessThan(PlaceTypeLinkColumns.PLACE_TYPE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypeIdLtEq(long value) {
        addLessThanOrEquals(PlaceTypeLinkColumns.PLACE_TYPE_ID, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesNote(String... value) {
        addEquals(PlaceTypesColumns.NOTE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesNoteNot(String... value) {
        addNotEquals(PlaceTypesColumns.NOTE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesNoteLike(String... value) {
        addLike(PlaceTypesColumns.NOTE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesNoteContains(String... value) {
        addContains(PlaceTypesColumns.NOTE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesNoteStartsWith(String... value) {
        addStartsWith(PlaceTypesColumns.NOTE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesNoteEndsWith(String... value) {
        addEndsWith(PlaceTypesColumns.NOTE, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesColor(int... value) {
        addEquals(PlaceTypesColumns.COLOR, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeTypesColorNot(int... value) {
        addNotEquals(PlaceTypesColumns.COLOR, toObjectArray(value));
        return this;
    }

    public PlaceTypeLinkSelection placeTypesColorGt(int value) {
        addGreaterThan(PlaceTypesColumns.COLOR, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesColorGtEq(int value) {
        addGreaterThanOrEquals(PlaceTypesColumns.COLOR, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesColorLt(int value) {
        addLessThan(PlaceTypesColumns.COLOR, value);
        return this;
    }

    public PlaceTypeLinkSelection placeTypesColorLtEq(int value) {
        addLessThanOrEquals(PlaceTypesColumns.COLOR, value);
        return this;
    }
}
